name: Build Bebop

on: [push, pull_request]

jobs:
  lint:
    runs-on: [self-hosted, linux]
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-go@v3
        with:
          go-version: "1.19.x"
      - name: vet
        run: go vet ./...
      - name: fmt
        run: test -z $(gofmt -l .)

  test:
    strategy:
      matrix:
        go-version: ["1.18.x", "1.19.x"]
    runs-on: [self-hosted, linux]
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-go@v3
        with:
          go-version: ${{ matrix.go-version }}
      - name: build
        run: go build ./...
      - name: unit tests
        run: go test ./... -v

  build_docker:
    needs: [lint, test]
    runs-on: [self-hosted, linux]
    permissions:
      id-token: write # This is required for requesting the JWT
      contents: read # This is required for actions/checkout
    steps:
      - uses: actions/checkout@v3
      - name: configure aws credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          role-to-assume: arn:aws:iam::278421603546:role/bebop-deploy-role-prod
          role-session-name: bebopdeploysession
          aws-region: us-east-1
      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v1
      - name: Build, tag, and push image to Amazon ECR
        env:
          ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
          ECR_REPOSITORY: bebop
          IMAGE_TAG: ${{ github.sha }}
        run: |
          docker build -t $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG .
          docker push $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG
